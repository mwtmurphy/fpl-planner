[tool.poetry]
name = "fpl"
version = "0.1.0"
description = "Fantasy Premier League data collection and analysis toolkit"
authors = ["mwtmurphy"]
readme = "README.md"
packages = [{include = "fpl", from = "src"}]

[tool.poetry.dependencies]
python = "^3.13"
httpx = "^0.28.0"
pydantic = "^2.12.0"
pandas = "^2.1.0"
python-dotenv = "^1.0.0"
tqdm = "^4.66.0"

[tool.poetry.dependencies.streamlit]
version = "^1.36.0"
extras = ["testing"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-cov = "^7.0.0"
pytest-asyncio = "^1.2.0"
black = "^25.9.0"
ruff = "^0.14.0"
mypy = "^1.7.0"
pre-commit = "^4.3.0"
pytest-httpx = "^0.35.0"
pytest-mock = "^3.15.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = []

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "-v",
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests for isolated functions and classes",
    "integration: Integration tests for API and cross-module interactions",
    "app: AppTest tests for Streamlit pages and UI",
    "slow: Slow running tests (API calls, heavy data processing)",
]
